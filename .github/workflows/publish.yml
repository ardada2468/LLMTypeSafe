# This workflow uses semantic-release for automated versioning and publishing
# It follows industry standard practices for releasing to both npm and GitHub

name: Release and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build
      - run: npm test

  release:
    needs: test
    runs-on: ubuntu-latest
    # Only run on push to main (not on pull requests)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      
      # Configure git for semantic-release
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - run: npm ci
      - run: npm run build
      
      # Run tests one more time before release
      - name: Run tests before release
        run: npm test
      
      # Install semantic-release dependencies only in CI environment
      - name: Install semantic-release dependencies
        run: |
          npm install --no-save semantic-release@^24.0.0
          npm install --no-save @semantic-release/commit-analyzer@^13.0.0
          npm install --no-save @semantic-release/release-notes-generator@^14.0.0
          npm install --no-save @semantic-release/changelog@^6.0.0
          npm install --no-save @semantic-release/github@^10.0.0
          npm install --no-save @semantic-release/git@^10.0.0
          npm install --no-save @semantic-release/exec@^6.0.0
      
      # Use semantic-release for automated versioning and publishing
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  # Optional: Also publish to GitHub Packages
  publish-github-packages:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
      
      - run: npm ci
      - run: npm run build
      
      - name: Publish to GitHub Packages
        run: |
          for package_dir in packages/*/; do
            if [ -d "$package_dir" ]; then
              echo "Processing $package_dir for GitHub Packages"
              cd "$package_dir"
              
              # Get package name and version
              PACKAGE_NAME=$(node -p "require('./package.json').name")
              PACKAGE_VERSION=$(node -p "require('./package.json').version")
              
              # Publish to GitHub Packages (only if not already published)
              if ! npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version 2>/dev/null; then
                echo "Publishing $PACKAGE_NAME@$PACKAGE_VERSION to GitHub Packages..."
                npm publish
              else
                echo "Version $PACKAGE_VERSION of $PACKAGE_NAME already exists, skipping..."
              fi
              
              cd - > /dev/null
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 